import streamlit as st
import cv2
import numpy as np
from ultralytics import YOLO
import gdown
import os
from PIL import Image


# Page configuration
st.set_page_config(page_title="Skin Cancer Classification", layout="wide")

# Model download from Google Drive
MODEL_URL = "https://drive.google.com/uc?id=1PcYOD4I_4dtkYTkKOhAOQMJ6ZTVDn__E"

MODEL_PATH = "best.pt"

@st.cache_resource
def load_model():
    if not os.path.exists(MODEL_PATH):
        with st.spinner("Downloading model..."):
            gdown.download(MODEL_URL, MODEL_PATH, quiet=False)
    return YOLO(MODEL_PATH)

model = load_model()

# Custom styling
st.markdown("""
    <style>
    .stApp {
        background-color: #f0f8ff;
    }

    section[data-testid="stFileUploader"] label div span {
        color: white !important;
    }

    section[data-testid="stFileUploader"] div span {
        color: black !important;
        font-weight: bold;
    }

    h1, div[data-testid="stMarkdownContainer"], label[data-testid="stFileUploaderLabel"] {
        color: black !important;
        font-family: 'Arial', sans-serif;
    }

    .stButton>button {
        background-color: #4CAF50;
        color: white;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        font-family: 'Arial', sans-serif;
    }

    .stButton>button:hover {
        background-color: #45a049;
    }
    </style>
""", unsafe_allow_html=True)

video_url = "https://drive.google.com/uc?export=download&id=1B2fznnDGu9xwYjjspEauyjvkF4umdvBg"
st.video(video_url)
# Title
st.title("Skin Cancer Classification")

# Description
st.markdown("""
‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á ‡∏Ñ‡∏∑‡∏≠ ‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏ô‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏™‡∏á UV ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ú‡∏¥‡∏ß‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡πÑ‡∏î‡πâ.
""", unsafe_allow_html=True)

st.markdown("""‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏ä‡∏ô‡∏¥‡∏î:

- Melanoma  
- Basal cell carcinoma  
- Squamous cell carcinoma  
""", unsafe_allow_html=True)

# Camera input
camera_image = st.camera_input("Take a photo using your webcam")

# File uploader
uploaded_file = st.file_uploader("Upload an image (JPG, PNG, JPEG)", type=["jpg", "png", "jpeg"])

# Determine image source
image = None
if camera_image is not None:
    image = Image.open(camera_image)
elif uploaded_file is not None:
    image = Image.open(uploaded_file)

# Process image if available
if image is not None:
    image_np = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)

    st.image(image_np, channels="BGR", caption="Input Image", use_container_width=True)

    # Run classification
    results = model(image_np)

    # Get predicted class
    class_id = int(results[0].probs.top1)
    class_name = results[0].names[class_id]
    confidence = float(results[0].probs.top1conf)

    # Show prediction
    st.markdown(f"### Predicted Class: **{class_name}**")
    st.markdown(f"‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•: **{confidence:.2%}**")
    st.success("Classification complete.")

# Disease-specific information
if class_name.lower() == "melanoma":
    st.markdown("#### üß† ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Melanoma")
    st.info("""
    **Melanoma** ‡∏Ñ‡∏∑‡∏≠ ‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡πá‡∏î‡∏™‡∏µ (melanocytes)  
    **‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£:** ‡πÑ‡∏ù‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÇ‡∏ï‡πÄ‡∏£‡πá‡∏ß ‡∏™‡∏µ‡πÑ‡∏°‡πà‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡∏Ç‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô  
    **‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:** ‡πÇ‡∏î‡∏ô‡∏£‡∏±‡∏á‡∏™‡∏µ UV ‡∏°‡∏≤‡∏Å, ‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡∏Å‡∏£‡∏£‡∏°, ‡∏ú‡∏¥‡∏ß‡∏Ç‡∏≤‡∏ß‡∏°‡∏≤‡∏Å, ‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡πÑ‡∏ù‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥  
    """)
elif class_name.lower() == "bcc":
    st.markdown("#### üß† ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Basal Cell Carcinoma")
    st.info("""
    **Basal Cell Carcinoma** ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡∏û‡∏ö‡πÑ‡∏î‡πâ‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î  
    **‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£:** ‡∏Å‡πâ‡∏≠‡∏ô‡πÉ‡∏™‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏°‡∏∏‡∏Å ‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÉ‡∏ï‡πâ‡∏ú‡∏¥‡∏ß ‡∏ú‡∏¥‡∏ß‡∏•‡∏≠‡∏Å‡∏ö‡πà‡∏≠‡∏¢ ‡πÜ  
    **‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:** ‡πÇ‡∏î‡∏ô‡πÅ‡∏î‡∏î‡∏™‡∏∞‡∏™‡∏°, ‡∏≠‡∏≤‡∏¢‡∏∏‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô, ‡∏ú‡∏¥‡∏ß‡∏Ç‡∏≤‡∏ß  
    """)
elif class_name.lower() == "scc":
    st.markdown("#### üß† ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Squamous Cell Carcinoma")
    st.info("""
    **Squamous Cell Carcinoma** ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡πÅ‡∏û‡∏£‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡∏≠‡∏∑‡πà‡∏ô  
    **‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£:** ‡∏Å‡πâ‡∏≠‡∏ô‡πÅ‡∏î‡∏á ‡∏ú‡∏¥‡∏ß‡∏Ç‡∏£‡∏∏‡∏Ç‡∏£‡∏∞ ‡∏°‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏ã‡∏∂‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ú‡∏•‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á  
    **‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:** ‡πÅ‡∏™‡∏á UV, ‡πÅ‡∏ú‡∏•‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á, ‡∏ú‡∏¥‡∏ß‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠ HPV, ‡∏†‡∏π‡∏°‡∏¥‡∏Ñ‡∏∏‡πâ‡∏°‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≥  
    """)
else:
    st.markdown("#### ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
    st.info("""
    **Squamous Cell Carcinoma** ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡πÅ‡∏û‡∏£‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡∏≠‡∏∑‡πà‡∏ô  
    **‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£:** ‡∏Å‡πâ‡∏≠‡∏ô‡πÅ‡∏î‡∏á ‡∏ú‡∏¥‡∏ß‡∏Ç‡∏£‡∏∏‡∏Ç‡∏£‡∏∞ ‡∏°‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏ã‡∏∂‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ú‡∏•‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á  
    **‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:** ‡πÅ‡∏™‡∏á UV, ‡πÅ‡∏ú‡∏•‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á, ‡∏ú‡∏¥‡∏ß‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠ HPV, ‡∏†‡∏π‡∏°‡∏¥‡∏Ñ‡∏∏‡πâ‡∏°‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≥
     """)
